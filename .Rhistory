y = reli_model$upper_ci_u_loa + 0.5,
size = 3,
# parse = TRUE
) +
scale_x_continuous(limits = c(min(data_wide$mean), max(data_wide$mean) + 5)) +
scale_y_continuous(limits = c(min(data_wide$diff)-1, max(data_wide$diff) + 1)) +
labs(
x = "Mean of Measurements (cm)",
y = "Difference of Measurements (cm)"
) +
theme_bw()
plots <- list()
for(i in c("fdi", "jmc", "mj", "opto")) {
data_wide <- data |>
filter(method == "fdi")|>
pivot_wider(id_cols = c(ID_num,trial),
names_from = "session_no",
values_from = "jump_height") |>
mutate(
mean = (`2` + `1`)/2,
diff = `2` - `1`
)
reli_model <- reli_models |>
filter(method == "fdi")
plot <- data_wide |>
ggplot(aes(x = mean, y = diff)) +
# Add reference line at zero
geom_hline(yintercept = 0, linetype = "dashed") +
# Add raw data
geom_point(alpha = 0.75) +
# Add mean bias
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_mean,
ymax = reli_model$upper_ci_mean) +
geom_hline(yintercept = reli_model$mean_bias,
size = 1) +
geom_text(label = glue::glue("Bias = {round(reli_model$mean_bias,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_mean + 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_mean,2)}, {round(reli_model$upper_ci_mean,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_mean + 0.5,
size = 3,
# parse = TRUE
) +
# Add lower LoA
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_l_loa[[1]],
ymax = reli_model$upper_ci_l_loa[[1]]) +
geom_hline(yintercept = reli_model$l_loa,
size = 1, linetype = "dotted")  +
geom_text(label = glue::glue("Lower LoA = {round(reli_model$l_loa,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$lower_ci_l_loa - 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_l_loa,2)}, {round(reli_model$upper_ci_l_loa,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$lower_ci_l_loa - 1.5,
size = 3,
# parse = TRUE
) +
# Add upper LoA
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_u_loa,
ymax = reli_model$upper_ci_u_loa) +
geom_hline(yintercept = reli_model$u_loa,
size = 1, linetype = "dotted") +
geom_text(label = glue::glue("Upper LoA = {round(reli_model$u_loa,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_u_loa + 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_u_loa,2)}, {round(reli_model$upper_ci_u_loa,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_u_loa + 0.5,
size = 3,
# parse = TRUE
) +
scale_x_continuous(limits = c(min(data_wide$mean), max(data_wide$mean) + 5)) +
scale_y_continuous(limits = c(min(data_wide$diff)-1, max(data_wide$diff) + 1)) +
labs(
x = "Mean of Measurements (cm)",
y = "Difference of Measurements (cm)"
) +
theme_bw()
plots[[i]] <- plot
}
plots$opto
plots <- list()
for(i in c("fdi", "jmc", "mj", "opto")) {
data_wide <- data |>
filter(method == i)|>
pivot_wider(id_cols = c(ID_num,trial),
names_from = "session_no",
values_from = "jump_height") |>
mutate(
mean = (`2` + `1`)/2,
diff = `2` - `1`
)
reli_model <- reli_models |>
filter(method == i)
plot <- data_wide |>
ggplot(aes(x = mean, y = diff)) +
# Add reference line at zero
geom_hline(yintercept = 0, linetype = "dashed") +
# Add raw data
geom_point(alpha = 0.75) +
# Add mean bias
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_mean,
ymax = reli_model$upper_ci_mean) +
geom_hline(yintercept = reli_model$mean_bias,
size = 1) +
geom_text(label = glue::glue("Bias = {round(reli_model$mean_bias,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_mean + 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_mean,2)}, {round(reli_model$upper_ci_mean,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_mean + 0.5,
size = 3,
# parse = TRUE
) +
# Add lower LoA
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_l_loa[[1]],
ymax = reli_model$upper_ci_l_loa[[1]]) +
geom_hline(yintercept = reli_model$l_loa,
size = 1, linetype = "dotted")  +
geom_text(label = glue::glue("Lower LoA = {round(reli_model$l_loa,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$lower_ci_l_loa - 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_l_loa,2)}, {round(reli_model$upper_ci_l_loa,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$lower_ci_l_loa - 1.5,
size = 3,
# parse = TRUE
) +
# Add upper LoA
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_u_loa,
ymax = reli_model$upper_ci_u_loa) +
geom_hline(yintercept = reli_model$u_loa,
size = 1, linetype = "dotted") +
geom_text(label = glue::glue("Upper LoA = {round(reli_model$u_loa,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_u_loa + 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_u_loa,2)}, {round(reli_model$upper_ci_u_loa,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_u_loa + 0.5,
size = 3,
# parse = TRUE
) +
scale_x_continuous(limits = c(min(data_wide$mean), max(data_wide$mean) + 5)) +
scale_y_continuous(limits = c(min(data_wide$diff)-1, max(data_wide$diff) + 1)) +
labs(
x = "Mean of Measurements (cm)",
y = "Difference of Measurements (cm)"
) +
theme_bw()
plots[[i]] <- plot
}
plots$opto
(plots$fdi + labs(title = "Force Decks")) +
(plots$jmc + labs(title = "Jump Mat")) +
(plots$mj + labs(title = "MyJump App")) +
(plots$opto + labs(title = "Optojump")) + +
plot_annotation(title = "Test-Retest Reliability Across Methods",
subtitle = "Mixed Effects Model Mean Bias and 95% Limits of Agreement",
caption = "Each method compared to gold standard (Force Decks Impulse-Momentum)\n
Confidence intervals for mean bias and limits of agreement from nonparametric bootstrap resampling 1000 times")
(plots$fdi + labs(title = "Force Decks")) +
(plots$jmc + labs(title = "Jump Mat"))
(plots$fdi + labs(title = "Force Decks")) +
(plots$jmc + labs(title = "Jump Mat")) +
(plots$mj + labs(title = "MyJump App")) +
(plots$opto + labs(title = "Optojump")) +
plot_annotation(title = "Test-Retest Reliability Across Methods",
subtitle = "Mixed Effects Model Mean Bias and 95% Limits of Agreement",
caption = "Each method compared to gold standard (Force Decks Impulse-Momentum)\n
Confidence intervals for mean bias and limits of agreement from nonparametric bootstrap resampling 1000 times")
targets::tar_make()
plots <- list()
for(i in c("fdi", "jmc", "mj", "opto")) {
data_wide <- data |>
filter(method == i)|>
pivot_wider(id_cols = c(ID_num,trial),
names_from = "session_no",
values_from = "jump_height") |>
mutate(
mean = (`2` + `1`)/2,
diff = `2` - `1`
)
reli_model <- reli_models |>
filter(method == i)
plot <- data_wide |>
ggplot(aes(x = mean, y = diff)) +
# Add reference line at zero
geom_hline(yintercept = 0, linetype = "dashed") +
# Add raw data
geom_point(alpha = 0.75) +
# Add mean bias
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_mean,
ymax = reli_model$upper_ci_mean) +
geom_hline(yintercept = reli_model$mean_bias,
size = 1) +
geom_text(label = glue::glue("Bias = {round(reli_model$mean_bias,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_mean + 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_mean,2)}, {round(reli_model$upper_ci_mean,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_mean + 0.5,
size = 3,
# parse = TRUE
) +
# Add lower LoA
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_l_loa[[1]],
ymax = reli_model$upper_ci_l_loa[[1]]) +
geom_hline(yintercept = reli_model$l_loa,
size = 1, linetype = "dotted")  +
geom_text(label = glue::glue("Lower LoA = {round(reli_model$l_loa,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$lower_ci_l_loa - 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_l_loa,2)}, {round(reli_model$upper_ci_l_loa,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$lower_ci_l_loa - 1.5,
size = 3,
# parse = TRUE
) +
# Add upper LoA
annotate("rect", alpha = 0.25,
xmin = -Inf, xmax = Inf,
ymin = reli_model$lower_ci_u_loa,
ymax = reli_model$upper_ci_u_loa) +
geom_hline(yintercept = reli_model$u_loa,
size = 1, linetype = "dotted") +
geom_text(label = glue::glue("Upper LoA = {round(reli_model$u_loa,2)} cm"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_u_loa + 1,
size = 3,
# parse = TRUE
) +
geom_text(label = glue::glue("[95%CI: {round(reli_model$lower_ci_u_loa,2)}, {round(reli_model$upper_ci_u_loa,2)}]"),
x = max(data_wide$mean) + 0.75,
y = reli_model$upper_ci_u_loa + 0.5,
size = 3,
# parse = TRUE
) +
scale_x_continuous(limits = c(min(data_wide$mean), max(data_wide$mean) + 5)) +
scale_y_continuous(limits = c(min(data_wide$diff)-2, max(data_wide$diff) + 2)) +
labs(
x = "Mean of Measurements (cm)",
y = "Difference of Measurements (cm)"
) +
theme_bw()
plots[[i]] <- plot
}
plots$opto
(plots$fdi + labs(title = "Force Decks")) +
(plots$jmc + labs(title = "Jump Mat")) +
(plots$mj + labs(title = "MyJump App")) +
(plots$opto + labs(title = "Optojump")) +
plot_annotation(title = "Test-Retest Reliability Across Methods",
subtitle = "Mixed Effects Model Mean Bias and 95% Limits of Agreement",
caption = "Each method compared to gold standard (Force Decks Impulse-Momentum)\n
Confidence intervals for mean bias and limits of agreement from nonparametric bootstrap resampling 1000 times")
targets::tar_make()
renv::status()
renv::snapshot()
targets::tar_make()
library(tidyverse)
library(lme4)
targets::tar_load(data)
data_wide <- data |>
filter(method == "fdi" | method == "jmc") |>
mutate(method = case_when(
method == "fdi" ~ "M1",
method == "jmc" ~ "M2",
method == "mj" ~ "M2",
method == "opto" ~ "M2"
)) |>
pivot_wider(id_cols = c(ID_num,session_no,trial),
names_from = "method",
values_from = "jump_height") |>
mutate(
mean = (M2 + M1)/2,
diff = M2 - M1
)
lmer_diff <- lmer(diff ~ (1|ID_num) + (1|session_no),
data = data_wide,
REML = TRUE)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100)
library(lmeresampler)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100)
View(boot_lmer_diff)
case_bootstrap
View(case_bootstrap())
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100)
boot_lmer_diff$replicates
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100,
.refit = FALSE)
View(boot_lmer_diff)
boot_lmer_diff[[1]]
t <- boot_lmer_diff[[1]]
View(t)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,FALSE,FALSE), B = 100,
.refit = FALSE)
t <- boot_lmer_diff[[1]]
View(t)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,TRUE,FALSE), B = 100,
.refit = FALSE)
t <- boot_lmer_diff[[1]]
View(t)
lmer_diff
View(lmer_diff)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,FALSE,FALSE), B = 100,
.refit = FALSE)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,FALSE,FALSE), B = 100,
.refit = FALSE)
t <- boot_lmer_diff[[1]]
t <- boot_lmer_diff[[2]]
t1 <- boot_lmer_diff[[1]]
t1 <- boot_lmer_diff[[2]]
repl <- unnest(boot_lmer_diff)
repl <- unnest(as.data.frame(boot_lmer_diff))
View(repl)
targets::tar_make()
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,FALSE,FALSE), B = 100)
quantile(boot_lmer_diff$replicates$beta, 0.025, 0.975)
quantile(boot_lmer_diff$replicates$beta, c(0.025, 0.975))
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,TRUE,FALSE), B = 100)
quantile(boot_lmer_diff$replicates$beta, c(0.025, 0.975))
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,TRUE,TRUE), B = 100)
quantile(boot_lmer_diff$replicates$beta, c(0.025, 0.975))
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100)
quantile(boot_lmer_diff$replicates$beta, c(0.025, 0.975))
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100)
quantile(boot_lmer_diff$replicates$beta, c(0.025, 0.975))
sample(1:20, 20, replace = TRUE)
sample(1:20, 20, replace = TRUE)
sample(1:20, 20, replace = TRUE)
sample(1:20, 20, replace = TRUE)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100,
.refit = FALSE)
t1 <- boot_lmer_diff[[1]]
repl <- unnest(as.data.frame(boot_lmer_diff))
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(FALSE,FALSE,TRUE), B = 100,
.refit = FALSE)
repl <- unnest(as.data.frame(boot_lmer_diff))
View(repl)
rescov <- function(model, data) {
var.d <- crossprod(getME(model,"Lambdat"))
Zt <- getME(model,"Zt")
vr <- sigma(model)^2
var.b <- vr*(t(Zt) %*% var.d %*% Zt)
sI <- vr * Diagonal(nrow(data))
var.y <- var.b + sI
invisible(var.y)
}
rescov(lmer_diff)
rescov(lmer_diff, data_wide)
image(rescov(lmer_diff, data_wide))
lmer_diff
lmer_diff <- lmer(diff ~ (1|ID_num/session_no),
data = data_wide,
REML = TRUE)
lmer_diff
rescov <- function(model, data) {
var.d <- crossprod(getME(model,"Lambdat"))
Zt <- getME(model,"Zt")
vr <- sigma(model)^2
var.b <- vr*(t(Zt) %*% var.d %*% Zt)
sI <- vr * Diagonal(nrow(data))
var.y <- var.b + sI
invisible(var.y)
}
image(rescov(lmer_diff, data_wide))
lmer_diff <- lmer(diff ~ (1|ID_num) + (1|session_no),
data = data_wide,
REML = TRUE)
rescov <- function(model, data) {
var.d <- crossprod(getME(model,"Lambdat"))
Zt <- getME(model,"Zt")
vr <- sigma(model)^2
var.b <- vr*(t(Zt) %*% var.d %*% Zt)
sI <- vr * Diagonal(nrow(data))
var.y <- var.b + sI
invisible(var.y)
}
image(rescov(lmer_diff, data_wide))
data_wide <- data |>
filter(method == "fdi" | method == "jmc") |>
mutate(method = case_when(
method == "fdi" ~ "M1",
method == "jmc" ~ "M2",
method == "mj" ~ "M2",
method == "opto" ~ "M2"
)) |>
pivot_wider(id_cols = c(ID_num,session_no,trial),
names_from = "method",
values_from = "jump_height") |>
mutate(
mean = (M2 + M1)/2,
diff = M2 - M1,
session_unique = paste0(ID_num,session_no)
)
lmer_diff <- lmer(diff ~ (1|ID_num) + (1|session_unique),
data = data_wide,
REML = TRUE)
rescov <- function(model, data) {
var.d <- crossprod(getME(model,"Lambdat"))
Zt <- getME(model,"Zt")
vr <- sigma(model)^2
var.b <- vr*(t(Zt) %*% var.d %*% Zt)
sI <- vr * Diagonal(nrow(data))
var.y <- var.b + sI
invisible(var.y)
}
image(rescov(lmer_diff, data_wide))
lmer_diff <- lmer(diff ~ (1|ID_num/session_no),
data = data_wide,
REML = TRUE)
rescov <- function(model, data) {
var.d <- crossprod(getME(model,"Lambdat"))
Zt <- getME(model,"Zt")
vr <- sigma(model)^2
var.b <- vr*(t(Zt) %*% var.d %*% Zt)
sI <- vr * Diagonal(nrow(data))
var.y <- var.b + sI
invisible(var.y)
}
image(rescov(lmer_diff, data_wide))
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,FALSE,FALSE), B = 100,
.refit = FALSE)
repl <- unnest(as.data.frame(boot_lmer_diff))
View(repl)
boot_lmer_diff <- case_bootstrap(lmer_diff, .f = extract_parameters, resample = c(TRUE,FALSE,FALSE), B = 100)
quantile(boot_lmer_diff$replicates$beta, c(0.025, 0.975))
targets::tar_make()
targets::tar_make()
targets::tar_make()
7.43-1.92
5.3-0.24
5.54-0.74
5.33-0.05
4.83-0.14
targets::tar_visnetwork()
install.packages("quarto")
targets::tar_visnetwork()
targets::tar_make()
grateful::cite_packages()
cite_packages(out.dir = ".")
grateful::cite_packages(out.dir = ".")
grateful::cite_packages(out.dir = ".")
targets::tar_make()
#| message: false
#| warning: false
#| echo: false
#| include: false
cite_packages(output = "paragraph", out.dir = ".")
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork()
renv::status()
?renv::status
renv::snapshot()
renv::status()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork()
renv::status()
renv::snapshot()
renv::status()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
